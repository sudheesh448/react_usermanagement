{"ast":null,"code":"// Define action types\nconst SET_USERNAME = \"SET_USERNAME\";\nconst LOGOUT = \"LOGOUT\";\n\n// Retrieve data from localStorage\nconst username = localStorage.getItem(\"username\") || \"\";\nconst userId = localStorage.getItem(\"id\") || \"\";\n\n// Initial state\nconst initialState = {\n  username: username,\n  userId: userId\n};\n\n// Action creators\nexport const logout = () => ({\n  type: LOGOUT\n});\nexport const setUsername = newUsername => ({\n  type: SET_USERNAME,\n  payload: newUsername\n});\n\n// Reducer\nconst userStore = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERNAME:\n      console.log(username);\n      // Update localStorage when setting the username\n\n      return {\n        ...state,\n        username: action.payload\n      };\n    case LOGOUT:\n      // Clear localStorage and reset the state to its initial values\n      localStorage.clear();\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport default userStore;","map":{"version":3,"names":["SET_USERNAME","LOGOUT","username","localStorage","getItem","userId","initialState","logout","type","setUsername","newUsername","payload","userStore","state","action","console","log","clear"],"sources":["F:/backup/react/week3/sudheesh/frontend/src/ReduxStore/ReduxStore.js"],"sourcesContent":["// Define action types\r\nconst SET_USERNAME = \"SET_USERNAME\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\n// Retrieve data from localStorage\r\nconst username = localStorage.getItem(\"username\") || \"\";\r\nconst userId = localStorage.getItem(\"id\") || \"\";\r\n\r\n// Initial state\r\nconst initialState = {\r\n  username: username,\r\n  userId: userId,\r\n};\r\n\r\n// Action creators\r\nexport const logout = () => ({\r\n  type: LOGOUT,\r\n});\r\n\r\nexport const setUsername = (newUsername) => ({\r\n  type: SET_USERNAME,\r\n  payload: newUsername,\r\n});\r\n\r\n// Reducer\r\nconst userStore = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERNAME:\r\n      console.log(username);\r\n      // Update localStorage when setting the username\r\n\r\n      return { ...state, username: action.payload };\r\n    case LOGOUT:\r\n      // Clear localStorage and reset the state to its initial values\r\n      localStorage.clear();\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userStore;\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,cAAc;AACnC,MAAMC,MAAM,GAAG,QAAQ;;AAEvB;AACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;AACvD,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;;AAE/C;AACA,MAAME,YAAY,GAAG;EACnBJ,QAAQ,EAAEA,QAAQ;EAClBG,MAAM,EAAEA;AACV,CAAC;;AAED;AACA,OAAO,MAAME,MAAM,GAAGA,CAAA,MAAO;EAC3BC,IAAI,EAAEP;AACR,CAAC,CAAC;AAEF,OAAO,MAAMQ,WAAW,GAAIC,WAAW,KAAM;EAC3CF,IAAI,EAAER,YAAY;EAClBW,OAAO,EAAED;AACX,CAAC,CAAC;;AAEF;AACA,MAAME,SAAS,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACN,IAAI;IACjB,KAAKR,YAAY;MACfe,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;MACrB;;MAEA,OAAO;QAAE,GAAGW,KAAK;QAAEX,QAAQ,EAAEY,MAAM,CAACH;MAAQ,CAAC;IAC/C,KAAKV,MAAM;MACT;MACAE,YAAY,CAACc,KAAK,CAAC,CAAC;MACpB,OAAOX,YAAY;IACrB;MACE,OAAOO,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}