{"ast":null,"code":"import axios from \"axios\";\nlet refresh = false;\naxios.interceptors.response.use(resp => resp, async error => {\n  if (error.response && error.response.status === 401 && !refresh) {\n    refresh = true;\n    console.log(localStorage.getItem(\"refresh_token\"));\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/token/refresh/\", {\n        refresh: localStorage.getItem(\"refresh_token\")\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data[\"access\"]}`;\n        localStorage.setItem(\"access_token\", response.data.access);\n        console.log(response.data.refresh);\n        localStorage.setItem(\"refresh_token\", response.data.refresh);\n        return axios(error.config);\n      }\n    } catch (refreshError) {\n      console.log(\"its here\" + refreshError);\n    } finally {\n      refresh = false;\n    }\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","refresh","interceptors","response","use","resp","error","status","console","log","localStorage","getItem","post","headers","withCredentials","defaults","common","data","setItem","access","config","refreshError","Promise","reject"],"sources":["F:/backup/react/week3/sudheesh/frontend/src/intercepter/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nlet refresh = false;\r\n\r\naxios.interceptors.response.use(\r\n  (resp) => resp,\r\n  async (error) => {\r\n    if (error.response && error.response.status === 401 && !refresh) {\r\n      refresh = true;\r\n      console.log(localStorage.getItem(\"refresh_token\"));\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:8000/api/token/refresh/\",\r\n          {\r\n            refresh: localStorage.getItem(\"refresh_token\"),\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            withCredentials: true,\r\n          }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          axios.defaults.headers.common[\r\n            \"Authorization\"\r\n          ] = `Bearer ${response.data[\"access\"]}`;\r\n          localStorage.setItem(\"access_token\", response.data.access);\r\n          console.log(response.data.refresh);\r\n          localStorage.setItem(\"refresh_token\", response.data.refresh);\r\n          return axios(error.config);\r\n        }\r\n      } catch (refreshError) {\r\n        console.log(\"its here\" + refreshError);\r\n      } finally {\r\n        refresh = false;\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,OAAO,GAAG,KAAK;AAEnBD,KAAK,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC5BC,IAAI,IAAKA,IAAI,EACd,MAAOC,KAAK,IAAK;EACf,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAI,CAACN,OAAO,EAAE;IAC/DA,OAAO,GAAG,IAAI;IACdO,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;IAClD,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAC/B,0CAA0C,EAC1C;QACEX,OAAO,EAAES,YAAY,CAACC,OAAO,CAAC,eAAe;MAC/C,CAAC,EACD;QACEE,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,eAAe,EAAE;MACnB,CACF,CAAC;MAED,IAAIX,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3BP,KAAK,CAACe,QAAQ,CAACF,OAAO,CAACG,MAAM,CAC3B,eAAe,CAChB,GAAI,UAASb,QAAQ,CAACc,IAAI,CAAC,QAAQ,CAAE,EAAC;QACvCP,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEf,QAAQ,CAACc,IAAI,CAACE,MAAM,CAAC;QAC1DX,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACc,IAAI,CAAChB,OAAO,CAAC;QAClCS,YAAY,CAACQ,OAAO,CAAC,eAAe,EAAEf,QAAQ,CAACc,IAAI,CAAChB,OAAO,CAAC;QAC5D,OAAOD,KAAK,CAACM,KAAK,CAACc,MAAM,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOC,YAAY,EAAE;MACrBb,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGY,YAAY,CAAC;IACxC,CAAC,SAAS;MACRpB,OAAO,GAAG,KAAK;IACjB;EACF;EACA,OAAOqB,OAAO,CAACC,MAAM,CAACjB,KAAK,CAAC;AAC9B,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}