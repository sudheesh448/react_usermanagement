[{"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\index.js":"1","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\App.js":"2","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\reportWebVitals.js":"3","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\login\\Login.js":"4","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\items\\Spinner\\Spinner.js":"5","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\home\\Home.js":"6","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\items\\navbar\\Navbar.js":"7","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\profile\\Profile.js":"8","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\ReduxStore\\ReduxStore.js":"9","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\register\\Register.js":"10","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\admin\\Admin.js":"11","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\items\\Modal\\Modal.js":"12","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\items\\Modal\\Editmodal.js":"13","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\intercepter\\axios.js":"14"},{"size":820,"mtime":1693982348226,"results":"15","hashOfConfig":"16"},{"size":767,"mtime":1693981382301,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1693931657633,"results":"18","hashOfConfig":"16"},{"size":5804,"mtime":1694165115629,"results":"19","hashOfConfig":"16"},{"size":238,"mtime":1693910863915,"results":"20","hashOfConfig":"16"},{"size":5740,"mtime":1694165269985,"results":"21","hashOfConfig":"16"},{"size":3266,"mtime":1694146258495,"results":"22","hashOfConfig":"16"},{"size":6258,"mtime":1694148079426,"results":"23","hashOfConfig":"16"},{"size":983,"mtime":1693910863908,"results":"24","hashOfConfig":"16"},{"size":6522,"mtime":1694146112804,"results":"25","hashOfConfig":"16"},{"size":9660,"mtime":1694077766430,"results":"26","hashOfConfig":"16"},{"size":6675,"mtime":1693910863914,"results":"27","hashOfConfig":"16"},{"size":6607,"mtime":1693910863913,"results":"28","hashOfConfig":"16"},{"size":1240,"mtime":1693980772481,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hk8sqt",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\index.js",[],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\App.js",[],[],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\reportWebVitals.js",[],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\login\\Login.js",["78"],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\items\\Spinner\\Spinner.js",[],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\home\\Home.js",["79","80","81","82","83"],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\items\\navbar\\Navbar.js",[],[],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\profile\\Profile.js",["84","85","86","87","88","89"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport Navbar from \"../../items/navbar/Navbar\";\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [image, setImage] = useState(\"\");\r\n  const userId = localStorage.getItem(\"id\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"user id\" + userId);\r\n    // Fetch user data based on the retrieved user ID\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const access = localStorage.getItem(\"access_token\");\r\n        const response = await axios.get(\r\n          `http://127.0.0.1:8000/api/user/${userId}/`,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${access}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        setUserData(response.data);\r\n      } catch (error) {\r\n        console.log(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"profile_img\", image);\r\n      await axios.put(`http://127.0.0.1:8000/api/image/${userId}/`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\", // Set content type to send FormData\r\n        },\r\n      });\r\n      notify();\r\n    } catch (error) {\r\n      alert(\"Error: \" + error);\r\n    }\r\n  };\r\n  const notify = () => toast.success(\"image has been updated.\");\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"w-full max-w-sm bg-white rounded-lg shadow-xl\">\r\n          <div className=\"flex justify-end px-4 pt-4\">\r\n            <button\r\n              id=\"dropdownButton\"\r\n              className=\"inline-block text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:ring-4 focus:outline-none focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-1.5\"\r\n              type=\"button\"\r\n            >\r\n              <span className=\"sr-only\">Open dropdown</span>\r\n              <svg\r\n                className=\"w-5 h-5\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"currentColor\"\r\n                viewBox=\"0 0 16 3\"\r\n              >\r\n                <path d=\"M2 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm6.041 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM14 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Z\" />\r\n              </svg>\r\n            </button>\r\n            {/* Dropdown menu */}\r\n            <div\r\n              id=\"dropdown\"\r\n              className=\"z-10 hidden text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700\"\r\n            >\r\n              <ul className=\"py-2\" aria-labelledby=\"dropdownButton\">\r\n                <li>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                  >\r\n                    Edit\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"block px-4 py-2 text-sm text-gray-700 hover-bg-gray-100 dark:hover-bg-gray-600 dark:text-gray-200 dark:hover-text-white\"\r\n                  >\r\n                    Export Data\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"block px-4 py-2 text-sm text-red-600 hover:bg-gray-100 dark:hover-bg-gray-600 dark:text-gray-200 dark:hover-text-white\"\r\n                  >\r\n                    Delete\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col items-center pb-10\">\r\n          \r\n            {userData && (\r\n\r\n              \r\n              <img\r\n                src={\r\n                  image\r\n                    ? URL.createObjectURL(image)\r\n                    : `http://127.0.0.1:8000${userData.profile_img}`\r\n  \r\n                } // Access the image URL from the userData object\r\n                className=\"w-24 h-24 mb-3 rounded-full shadow-lg\"\r\n                alt=\"profile picture\"\r\n                onError={() => {\r\n                  console.log(\"Error loading image\");\r\n                  console.log(\"Image URL:\", userData.profile_img);\r\n                }}\r\n              />\r\n            )}\r\n\r\n            <h5 className=\"mb-1 text-xl font-medium text-gray-900 dark:text-dark\">\r\n              {userData ? userData.username : \"\"}\r\n            </h5>\r\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              {userData ? userData.email : \"\"}\r\n            </span>\r\n            <div className=\"flex mt-4 space-x-3 md:mt-6\">\r\n              <input\r\n                onChange={(e) => setImage(e.target.files[0])}\r\n                type=\"file\"\r\n                id=\"imageInput\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n\r\n              <label\r\n                htmlFor=\"imageInput\"\r\n                className=\"inline-flex items-center px-4 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n              >\r\n                Change Image\r\n              </label>\r\n\r\n              <a\r\n                onClick={handleSubmit}\r\n                className=\"inline-flex items-center px-4 py-2 text-sm font-medium text-center text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-700 dark:focus:ring-gray-700\"\r\n              >\r\n                Submit Image\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toaster />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\ReduxStore\\ReduxStore.js",[],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\register\\Register.js",[],[],"F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\Components\\admin\\Admin.js",["90","91","92","93","94","95"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../../items/Modal/Modal\";\r\nimport Editmodal from \"../../items/Modal/Editmodal\";\r\nimport Navbar from \"../../items/navbar/Navbar\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst Admin = () => {\r\n  const [userdata, setuserData] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://127.0.0.1:8000/api/userlist\");\r\n      console.log(response.data);\r\n      setuserData(response.data.userlist);\r\n    } catch (error) {\r\n      console.log(\"Error fetching user data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isSuper = localStorage.getItem(\"is_super\");\r\n    if (isSuper !== \"true\") {\r\n      navigate(\"/\");\r\n    }\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const filteredUsers = userdata.filter(\r\n    (user) =>\r\n      user.id.toString().includes(searchTerm) || // Search by ID\r\n      user.email.toLowerCase().includes(searchTerm.toLowerCase()) || // Search by Email\r\n      user.username.toLowerCase().includes(searchTerm.toLowerCase()) // Search by Username\r\n  );\r\n  const deleteUser = async (id) => {\r\n    try {\r\n      await axios.post(`http://127.0.0.1:8000/api/popuser/${id}/`);\r\n      // Filter out the deleted user from the user list\r\n      const updatedUserList = userdata.filter((user) => user.id !== id);\r\n      setuserData(updatedUserList);\r\n    } catch (error) {\r\n      errorToast(error);\r\n    }\r\n  };\r\n\r\n  const updateUserInList = (updatedUser) => {\r\n    // Find the index of the updated user in the list\r\n    const index = userdata.findIndex((user) => user.id === updatedUser.id);\r\n\r\n    // Update the user in the list with the updated data\r\n    if (index !== -1) {\r\n      const updatedUsers = [...userdata];\r\n      updatedUsers[index] = updatedUser;\r\n      setuserData(updatedUsers);\r\n    }\r\n  };\r\n  const errorToast = (er) => {\r\n    toast.error(\"!\", er);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"-m-1.5 overflow-x-auto\">\r\n          <div className=\"p-1.5 min-w-full inline-block align-middle\">\r\n            <div className=\"border rounded-lg divide-y divide-gray-200 dark:border-gray-700 dark:divide-gray-700\">\r\n              <div className=\"py-3 px-4\">\r\n                <div className=\"flex items-center\">\r\n                  <button className=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\">\r\n                    <Modal\r\n                      addUserToList={(user) => {\r\n                        // Ensure user object is defined before adding to the list\r\n                        if (user) {\r\n                          setuserData((prevData) => [...prevData, user]);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </button>\r\n                </div>\r\n                <Toaster />\r\n                <div className=\"relative max-w-xs\">\r\n                  <label\r\n                    htmlFor=\"hs-table-with-pagination-search\"\r\n                    className=\"sr-only\"\r\n                  >\r\n                    Search\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"hs-table-with-pagination-search\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    id=\"hs-table-with-pagination-search\"\r\n                    className=\"p-3 pl-10 block w-full border-gray-200 rounded-md text-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400\"\r\n                    placeholder=\"Search for items\"\r\n                  />\r\n                  <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none pl-4\">\r\n                    <svg\r\n                      className=\"h-3.5 w-3.5 text-gray-400\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      fill=\"currentColor\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"overflow-hidden\">\r\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                    <tr>\r\n                      <th\r\n                        scope=\"col\"\r\n                        className=\"py-3 px-4 pr-0 text-left text-xs font-medium text-white uppercase\"\r\n                      >\r\n                        User Id\r\n                      </th>\r\n                      <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\"\r\n                      >\r\n                        Username\r\n                      </th>\r\n                      <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-white uppercase\"\r\n                      >\r\n                        Email\r\n                      </th>\r\n                      <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-right text-xs font-medium text-white uppercase\"\r\n                      >\r\n                        Action\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                    {filteredUsers.map((user) => (\r\n                      <tr>\r\n                        <td className=\"py-3 pl-4 px-6 py-4 whitespace-nowrap text-sm font-medium  text-black\">\r\n                          {user.id}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black\">\r\n                          {user.username}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black\">\r\n                          {user.email}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                          <button\r\n                            onClick={() => deleteUser(user.id)}\r\n                            className=\"bg-transparent hover:bg-red-500 text-red-700 font-semibold hover:text-white py-2 px-4 border border-red-500 hover:border-transparent rounded mr-2\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                          <button className=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\">\r\n                            <Editmodal\r\n                              userid={user.id}\r\n                              usernames={user.username}\r\n                              emails={user.email}\r\n                              pass={user.password}\r\n                              editUserToList={updateUserInList}\r\n                            />\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                    ;\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"py-1 px-4\">\r\n                <nav className=\"flex items-center space-x-2\">\r\n                  <a\r\n                    className=\"text-gray-400 hover:text-blue-600 p-4 inline-flex items-center gap-2 font-medium rounded-md\"\r\n                    href=\"#\"\r\n                  >\r\n                    <span aria-hidden=\"true\">«</span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </a>\r\n                  <a\r\n                    className=\"w-10 h-10 bg-blue-500 text-white p-4 inline-flex items-center text-sm font-medium rounded-full\"\r\n                    href=\"#\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    1\r\n                  </a>\r\n                  <a\r\n                    className=\"w-10 h-10 text-gray-400 hover:text-blue-600 p-4 inline-flex items-center text-sm font-medium rounded-full\"\r\n                    href=\"#\"\r\n                  >\r\n                    2\r\n                  </a>\r\n                  <a\r\n                    className=\"w-10 h-10 text-gray-400 hover:text-blue-600 p-4 inline-flex items-center text-sm font-medium rounded-full\"\r\n                    href=\"#\"\r\n                  >\r\n                    3\r\n                  </a>\r\n                  <a\r\n                    className=\"text-gray-400 hover:text-blue-600 p-4 inline-flex items-center gap-2 font-medium rounded-md\"\r\n                    href=\"#\"\r\n                  >\r\n                    <span className=\"sr-only\">Next</span>\r\n                    <span aria-hidden=\"true\">»</span>\r\n                  </a>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\items\\Modal\\Modal.js",["96"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Modal = ({ addUserToList }) => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModalVisible(!modalVisible);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"username\", username);\r\n      formData.append(\"email\", email);\r\n      formData.append(\"password\", password);\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:8000/api/register\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\", // Set content type to send FormData\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Registration successful:\", response.data);\r\n\r\n      // Assuming the server sends back the newly created user data as 'user' in the response\r\n      console.log(\"New User:\", response.data.user);\r\n\r\n      setModalVisible(false); // Navigate to login page\r\n      addUserToList(response.data);\r\n      // You can handle the response data here, such as storing tokens.\r\n    } catch (error) {\r\n      alert(\"Error: \" + error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Modal toggle */}\r\n      <button\r\n        data-modal-target=\"authentication-modal\"\r\n        data-modal-toggle=\"authentication-modal\"\r\n        type=\"button\"\r\n        onClick={toggleModal}\r\n      >\r\n        Add User\r\n      </button>\r\n\r\n      {/* Main modal */}\r\n      {modalVisible && (\r\n        <div\r\n          id=\"authentication-modal\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n          className=\"fixed top-0 left-0 right-0 z-50 w-full h-full flex items-center justify-center p-4 overflow-x-hidden overflow-y-auto md:inset-0\"\r\n        >\r\n          <div className=\"relative w-full max-w-md max-h-full\">\r\n            {/* Modal content */}\r\n            <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\r\n                data-modal-hide=\"authentication-modal\"\r\n                onClick={toggleModal}\r\n              >\r\n                <svg\r\n                  className=\"w-3 h-3\"\r\n                  aria-hidden=\"true\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 14 14\"\r\n                >\r\n                  <path\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                  />\r\n                </svg>\r\n                <span className=\"sr-only\">Close modal</span>\r\n              </button>\r\n              <div className=\"px-6 py-6 lg:px-8\">\r\n                <h3 className=\"mb-4 text-xl font-medium text-gray-900 dark:text-white\">\r\n                  ADD NEW USER\r\n                </h3>\r\n                <form onSubmit={handleSubmit} className=\"space-y-6\" action=\"#\">\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"email\"\r\n                      className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                    >\r\n                      Your email\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                      placeholder=\"name@company.com\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"email\"\r\n                      className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                    >\r\n                      Your Username\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      onChange={(e) => setUsername(e.target.value)}\r\n                      id=\"username\"\r\n                      className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                      placeholder=\"username\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"password\"\r\n                      className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                    >\r\n                      Your password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"••••••••\"\r\n                      className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                  >\r\n                    Add User\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\items\\Modal\\Editmodal.js",["97"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Editmodal = ({ userid, usernames, emails, pass, editUserToList }) => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(emails);\r\n  const [username, setUsername] = useState(usernames);\r\n  const [password, setPassword] = useState(pass);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModalVisible(!modalVisible);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"username\", username);\r\n      formData.append(\"email\", email);\r\n      formData.append(\"password\", password);\r\n      const response = await axios.put(\r\n        `http://127.0.0.1:8000/api/edituser/${userid}/`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\", // Set content type to send FormData\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Registration successful:\", response.data);\r\n\r\n      // Assuming the server sends back the newly created user data as 'user' in the response\r\n      console.log(\"New User:\", response.data.user);\r\n      const updatedUser = response.data;\r\n      editUserToList(updatedUser);\r\n      setModalVisible(false); // Navigate to login page\r\n\r\n      // You can handle the response data here, such as storing tokens.\r\n    } catch (error) {\r\n      alert(\"Error: \" + error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Modal toggle */}\r\n      <button\r\n        data-modal-target=\"authentication-modal\"\r\n        data-modal-toggle=\"authentication-modal\"\r\n        type=\"button\"\r\n        onClick={toggleModal}\r\n      >\r\n        Edit User\r\n      </button>\r\n\r\n      {/* Main modal */}\r\n      {modalVisible && (\r\n        <div\r\n          id=\"authentication-modal\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n          className=\"fixed top-0 left-0 right-0 z-50 w-full h-full flex items-center justify-center p-4 overflow-x-hidden overflow-y-auto md:inset-0\"\r\n        >\r\n          <div className=\"relative w-full max-w-md max-h-full\">\r\n            {/* Modal content */}\r\n            <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\r\n                data-modal-hide=\"authentication-modal\"\r\n                onClick={toggleModal}\r\n              >\r\n                <svg\r\n                  className=\"w-3 h-3\"\r\n                  aria-hidden=\"true\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 14 14\"\r\n                >\r\n                  <path\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                  />\r\n                </svg>\r\n                <span className=\"sr-only\">Close modal</span>\r\n              </button>\r\n              <div className=\"px-6 py-6 lg:px-8\">\r\n                <h3 className=\"mb-4 text-xl font-medium text-gray-900 dark:text-white\">\r\n                  Sign in to our platform\r\n                </h3>\r\n                <form onSubmit={handleSubmit} className=\"space-y-6\" action=\"#\">\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"email\"\r\n                      className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                    >\r\n                      Your email\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                      value={email}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"email\"\r\n                      className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                    >\r\n                      Your email\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      onChange={(e) => setUsername(e.target.value)}\r\n                      value={username}\r\n                      id=\"username\"\r\n                      className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"password\"\r\n                      className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                    >\r\n                      Your password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editmodal;\r\n","F:\\backup\\react\\week3\\sudheesh\\frontend\\src\\intercepter\\axios.js",[],[],{"ruleId":"98","severity":1,"message":"99","line":58,"column":9,"nodeType":"100","endLine":61,"endColumn":11},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"105","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":3,"column":23,"nodeType":"103","messageId":"104","endLine":3,"endColumn":27},{"ruleId":"101","severity":1,"message":"107","line":10,"column":10,"nodeType":"103","messageId":"104","endLine":10,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":38,"column":6,"nodeType":"110","endLine":38,"endColumn":8,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":34,"column":6,"nodeType":"110","endLine":34,"endColumn":8,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":82,"column":19,"nodeType":"100","endLine":85,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":90,"column":19,"nodeType":"100","endLine":93,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":98,"column":19,"nodeType":"100","endLine":101,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":113,"column":15,"nodeType":"100","endLine":126,"endColumn":17},{"ruleId":"114","severity":1,"message":"116","line":150,"column":15,"nodeType":"100","endLine":153,"endColumn":16},{"ruleId":"108","severity":1,"message":"117","line":31,"column":6,"nodeType":"110","endLine":31,"endColumn":8,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"115","line":182,"column":19,"nodeType":"100","endLine":185,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":189,"column":19,"nodeType":"100","endLine":193,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":196,"column":19,"nodeType":"100","endLine":199,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":202,"column":19,"nodeType":"100","endLine":205,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":208,"column":19,"nodeType":"100","endLine":211,"endColumn":20},{"ruleId":"101","severity":1,"message":"119","line":6,"column":9,"nodeType":"103","messageId":"104","endLine":6,"endColumn":17},{"ruleId":"101","severity":1,"message":"119","line":6,"column":9,"nodeType":"103","messageId":"104","endLine":6,"endColumn":17},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'Link' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["121"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["122"],"'navigate' is assigned a value but never used.",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [admin]",{"range":"129","text":"130"},"Update the dependencies array to be: [userId]",{"range":"131","text":"132"},"Update the dependencies array to be: [navigate]",{"range":"133","text":"134"},[1264,1266],"[admin]",[1026,1028],"[userId]",[961,963],"[navigate]"]